<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="6df54dfd-008a-4ad4-b010-176565abbdfc" name="Changes" comment="fix(upstream): no main">
      <change beforePath="$PROJECT_DIR$/config/config_en.json" beforeDir="false" afterPath="$PROJECT_DIR$/config/config_en.json" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Python Script" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="ProjectColorInfo"><![CDATA[{
  "associatedIndex": 4
}]]></component>
  <component name="ProjectId" id="34hN7dDoMFlniunZUNkX2wJmU0Z" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "ModuleVcsDetector.initialDetectionPerformed": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.git.unshallow": "true",
    "git-widget-placeholder": "main",
    "last_opened_file_path": "/Users/bailynlove/Documents/1-Project/code_zip/Deepseek-OCR",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "settings.editor.selected.configurable": "Code Search",
    "vue.rearranger.settings.migration": "true"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$" />
    </key>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-js-predefined-d6986cc7102b-e03c56caf84a-JavaScript-PY-252.23892.439" />
        <option value="bundled-python-sdk-b3ae9b5d7125-f0eec537fc84-com.jetbrains.pycharm.pro.sharedIndexes.bundled-PY-252.23892.439" />
      </set>
    </attachedChunks>
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="6df54dfd-008a-4ad4-b010-176565abbdfc" name="Changes" comment="" />
      <created>1761661677338</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1761661677338</updated>
      <workItem from="1761661678585" duration="16093000" />
    </task>
    <task id="LOCAL-00001" summary="feat(ocr): add text to image conversion functionality&#10;&#10;- Added configuration files for English and Chinese OCR rendering&#10;- Implemented text_to_images function for converting text to PDF and then to images&#10;- Created inference script for generating images from input text files&#10;- Integrated vLLM-based OCR inference pipeline with image preprocessing&#10;- Added support for customizable rendering parameters including fonts, colors, and layout- Implemented batch processing capability for handling multiple text inputs- Added auto-cropping features for optimizing image output dimensions">
      <option name="closed" value="true" />
      <created>1761814088436</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1761814088436</updated>
    </task>
    <task id="LOCAL-00002" summary="refactor(upstream_vllm): restructure code into modular functions&#10;&#10;- Split image rendering logic into render_images function&#10;- Encapsulate vLLM inference logic in llm_vllm function&#10;- Add llm_api function for external API inference- Introduce main function to orchestrate workflow&#10;- Add base64 encoding utility for API image handling&#10;- Improve code organization and readability- Maintain existing OCR functionality with DeepSeek-OCR model">
      <option name="closed" value="true" />
      <created>1761815601817</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1761815601817</updated>
    </task>
    <task id="LOCAL-00003" summary="fix(upstream): no main">
      <option name="closed" value="true" />
      <created>1761820546434</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1761820546434</updated>
    </task>
    <option name="localTasksCounter" value="4" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="Update README.md" />
    <MESSAGE value="Add configuration files and image generation script" />
    <MESSAGE value="feat(ocr): add text to image conversion functionality&#10;&#10;- Added configuration files for English and Chinese OCR rendering&#10;- Implemented text_to_images function for converting text to PDF and then to images&#10;- Created inference script for generating images from input text files&#10;- Integrated vLLM-based OCR inference pipeline with image preprocessing&#10;- Added support for customizable rendering parameters including fonts, colors, and layout- Implemented batch processing capability for handling multiple text inputs- Added auto-cropping features for optimizing image output dimensions" />
    <MESSAGE value="refactor(upstream_vllm): restructure code into modular functions&#10;&#10;- Split image rendering logic into render_images function&#10;- Encapsulate vLLM inference logic in llm_vllm function&#10;- Add llm_api function for external API inference- Introduce main function to orchestrate workflow&#10;- Add base64 encoding utility for API image handling&#10;- Improve code organization and readability- Maintain existing OCR functionality with DeepSeek-OCR model" />
    <MESSAGE value="fix(upstream): no main" />
    <option name="LAST_COMMIT_MESSAGE" value="fix(upstream): no main" />
  </component>
</project>